@startuml

enum TerritoryType {
  FOREST
  MEADOW
  FIELD
  HILL
  MOUNTAIN
  DESERT
}

class Territory {
  type: TerritoryType 
}

enum ResourceType {
  WOOD
  WOOL
  WHEAT
  CLAY
  ORE
}

class Resource {
  type: ResourceType 
}

enum ProgressType {
  MONOPOLY
  ROAD_CONSTRUCTION
  INVENTION
}

class ProgressCard {
  type: ProgressType 
}

enum SpecialType {
  LONGEST_ROAD
  STRONGEST_ARMY
}

class SpecialCard {
  type: SpecialType 
}

enum VictoryPointType {
  LIBRARY
  MARKET_PLACE
  PARLIAMENT
  CHURCH
  UNIVERSITY
}

class VictoryPointCard{
  type: VictoryPointType  
}

interface Card
interface Construction
abstract DevelopmentCard
class ConstructableArea <? extends Construction>
GameManager<-- Game

Game <-- CommandManager
Game <-- TradeManager
Game <-- CardManager
Game <-- ResourceManager
Game <-- PlayerManager
Game <-- ConstructionManager
Game <-- TerritoryManager
Game <-- Dice

CommandManager <-- Command
TradeManager <-- Trade
CardManager <-- Card
ResourceManager <-- Resource
PlayerManager <-- Player
ConstructionManager <-- ConstructableArea
TerritoryManager <-- Territory

Card <|-- DevelopmentCard
Card <|-- SpecialCard

DevelopmentCard <|-- ProgressCard
DevelopmentCard <|-- VictoryPointCard
DevelopmentCard <|-- KnightCard

ConstructableArea <-- Construction
Construction <|-- Building
Construction <|-- Road

ConstructableArea <-- Territory
Player <-- Resource
Player <-- Construction
Player <-- Card
Territory <-- Resource
Territory <-- ConstructableArea 
ConstructableArea <-- ConstructableArea 
ConstructableArea <-- Dock
@enduml